version: '3.7'

services:

  nginx:
    image: nginx
    # container_name: "nginx"
    environment:
      - VIRTUAL_HOST=${HOST}
    depends_on:
      - php
    hostname: nginx
    volumes:
      - ./docker/nginx/conf.d/default.nginx:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/conf.d/real_ip.conf:/etc/nginx/conf.d/real_ip.conf
      - ./html/:/var/www/html/
    networks:
      - frontend
      - backend

  ### PHP #################################
  php:
    image: neftelove_php
    container_name: neftelove-php-app-1
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        DOCKER_PHP_VERSION: '7'
        TZ: ${TZ}
    volumes:
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./html/:/var/www/html/
      - ./docker/php/supervisord.d:/etc/supervisord.d
    environment:
      APP_ENV: local
      CONTAINER_ROLE: app
    hostname: php
    depends_on:
      - mariadb
    networks:
      - backend

  supervisor:
    image: neftelove_php
    container_name: neftelove-php-supervisor-1
    volumes:
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./html/:/var/www/html/
      - ./docker/php/supervisord.d:/etc/supervisord.d
    environment:
      APP_ENV: local
      CONTAINER_ROLE: supervisor
    hostname: supervisor
    depends_on:
      - mariadb
      - php
    networks:
      - backend

  scheduler:
    image: neftelove_php
    container_name: neftelove-php-scheduler-1
    volumes:
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./html/:/var/www/html/
    environment:
      APP_ENV: local
      CONTAINER_ROLE: scheduler
    hostname: php
    depends_on:
      - mariadb
      - php
    networks:
      - backend

  queue:
    image: neftelove_php
    container_name: neftelove-php-queue-1
    volumes:
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./html/:/var/www/html/
    environment:
      APP_ENV: local
      CONTAINER_ROLE: queue
    hostname: php
    depends_on:
      - mariadb
      - php
    networks:
      - backend

  ### MariaDB ##############################################
  mariadb:
    build:
      context: ./docker/mariadb
      args:
        - http_proxy
        - https_proxy
        - no_proxy
        - MARIADB_VERSION=${MARIADB_VERSION}
    volumes:
      - ${MARIADB_DATA}:/var/lib/mysql
      - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MARIADB_PORT}:3306"
    hostname: mysql
    environment:
      - TZ=${WORKSPACE_TIMEZONE}
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    networks:
      - backend

  # ### Redis ################################################
  # redis:
  #   build: ./docker/redis
  #   volumes:
  #     - ${DATA_PATH_HOST}/redis:/data
  #   ports:
  #     - "${REDIS_PORT}:6379"
  #   networks:
  #     - backend

  ### phpMyAdmin ###########################################
  phpmyadmin:
    build: ./docker/phpmyadmin
    # image: phpmyadmin/phpmyadmin:latest
    environment:
      - VIRTUAL_HOST=${PMA_HOST}
      - PMA_HOST=mysql
      # - PMA_ARBITRARY=1
      - MYSQL_USER=${PMA_USER}
      - MYSQL_PASSWORD=${PMA_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
      - MAX_EXECUTION_TIME=${PMA_MAX_EXECUTION_TIME}
      - MEMORY_LIMIT=${PMA_MEMORY_LIMIT}
      - UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}
    # ports:
    #   - "${PMA_PORT}:80"
    hostname: phpmyadmin
    # extra_hosts:
    #   - "mysql:192.168.0.2"
    depends_on:
      - "${PMA_DB_ENGINE}"
    networks:
      - frontend
      - backend

  # ### Laravel Echo Server #######################################
  # laravel-echo-server:
  #   build:
  #     context: ./docker/laravel-echo-server
  #     args:
  #       - CHANGE_SOURCE=${CHANGE_SOURCE}
  #   volumes:
  #     - ./docker/laravel-echo-server/laravel-echo-server.json:/app/laravel-echo-server.json:ro
  #   ports:
  #     - "${LARAVEL_ECHO_SERVER_PORT}:6001"
  #   links:
  #     - redis
  #   networks:
  #     - frontend
  #     - backend


networks:
  frontend:
    external:
      name: proxy_proxy
  backend:
